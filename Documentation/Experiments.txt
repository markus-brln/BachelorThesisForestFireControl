Different levels of difficulty:

NOTE:
Comparing the amount of cells conserved may be useless because
all architectures will learn from the same data. We could only
employ additional algorithms to dig closer to the fire etc.
The main difference between the algorithms would be how well
they generalize for different environments, in my estimation.

1. BASIC [WORKS]
setting:
- 5 agents, static spawning in regular distance (star formation), 70 agent radius,
- fire_step_multiplicator = 0.3 => 2 pixels per 20, so 1/10 of agent speed digging
- no wind
tactic:
- all digging, close circle, then go outwards still digging
files:
- mBASICFIVE.npy

2. STOCHASTIC [WORKS mostly]
setting:
- same as 1., just agent spawn uncertainty = 10 cells
tactic:
- same as 1.
files:
- mSTOCHASTICFIVE0.npy, mSTOCHASTICFIVE1.npy, mSTOCHASTICFIVE2.npy

3. WIND
setting:
- 8 different wind directions, 5 wind speed levels
- spawn uncertainty = 10
- agentRadius = 90  (increased by 20 so first waypoint can be simply driving to the middle)
- fire_step_multiplicator = 0.5
  -> max wind speed: 6.3 pixels per 20 timesteps -> 0.315 agent speed
  -> min wind speed: 3                           -> 0.15 agent speed
tactic:
- drive to middle
- start digging clock-wise, as usual
- focus a bit on where the wind is going
files:
- mWINDFIVE0.npy,

4. HIGH SPAWN UNCERTAINTY
setting:
-  no wind
- uncertain_spawn = 30
- agentRadius = 70
tactic:
- make a relatively even pentagon mixing driving and digging
- continue to spiral when other firebreak crossed (seems to influence behaviour in simulation such that
gaps are still closed)
files:
- UNCERTAIN

5. HIGH SPAWN UNCERTAINTY + WIND
setting:
- difficulties of 3. and 4. combined
- wind_on = True
- uncertain_spawn = 30
- agentRadius = 90
- fire_step_multiplicator = 0.5
tactic:
- more or less like 4., try to even out gaps with driving faster
- containing a lot closer to the fire to increase difficulty a bit more
files:
UNCERTAIN



- maybe first experiment is too trivial
- 3 architectures * 4 experiments * 10(?) trained models each